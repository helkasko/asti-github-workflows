# Adapted from:
# - https://github.com/dependabot/fetch-metadata#labelling
# - https://docs.github.com/en/code-security/dependabot/working-with-dependabot/automating-dependabot-with-github-actions#label-a-pull-request

name: Dependabot auto-label
on:
  workflow_call:
    secrets:
      github-token:
        description: "The default GitHub access token"
        required: true
      personal-access-token:
        required: true

jobs:
  label-pr:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.user.login == 'dependabot[bot]' }}
    steps:
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1
        with:
          alert-lookup: true
          github-token: ${{ secrets.personal-access-token }}
      - uses: actions/checkout@v3
      - name: Add a label if the dependency is a production dependency
        if: ${{ steps.dependabot-metadata.outputs.dependency-type == 'direct:production' }}
        run: |
          # Create "production" label if it doesn't exist
          if ! gh label list --json name | grep -q "production"; then
            gh label create \
              production \
              --description "Related to production code, e.g., updating a production dependency" \
              --color FEF2C0
          fi
          gh pr edit "$PR_URL" --add-label "production"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
      - name: Add a label if the dependency is a development dependency
        if: ${{ steps.dependabot-metadata.outputs.dependency-type == 'direct:development' }}
        run: |
          # Create "development" label if it doesn't exist
          if ! gh label list --json name | grep -q "development"; then
            gh label create \
              development \
              --description "Related to development code, e.g., updating a development dependency" \
              --color 5F557E
          fi
          gh pr edit "$PR_URL" --add-label "development"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
      - name: Add a label if the dependency update is related to a security alert
        if: ${{ steps.dependabot-metadata.outputs.alert-state != '' }}
        run: |
          # Create "security" label if it doesn't exist
          if ! gh label list --json name | grep -q "security"; then
            gh label create \
              security \
              --description "Related to security, e.g., fixing a security vulnerability" \
              --color E25BAE
          fi
          gh pr edit "$PR_URL" --add-label "security"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.github-token }}
