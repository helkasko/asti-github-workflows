# This reusable GitHub workflow is used to calculate the dependencies for a Gradle project and submit the resulting
# dependency list to the GitHub Dependency Submission API in order to get Dependabot security alerts for the
# dependencies.
#
# Adapted from: https://github.com/mikepenz/gradle-dependency-submission#configure-the-workflow
name: Submit Gradle Dependencies
on:
  workflow_call:
    secrets:
      registry-url:
        description: "The URL for the private Maven package registry"
        required: true
      registry-username:
        description: "The username for the private Maven package registry"
        required: true
      registry-password:
        description: "The password for the private Maven package registry"
        required: true

jobs:
  submit-gradle-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run Gradle Dependency Submission action
        uses: mikepenz/gradle-dependency-submission@v0.8.3
        with:
          gradle-project-path: '.'
          gradle-build-module: ':'
          # GitHub Dependency Graph has a limit on how big manifest files are processed including whether Dependabot
          # alerts will be sent for the manifest. Manifests over 0.5 MB in size are only processed for enterprise
          # accounts (see https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/troubleshooting-the-dependency-graph#are-there-limits-which-affect-the-dependency-graph-data).
          #
          # This same limit also affects manifests sent through the Dependency Submission API. To restrict the size of
          # the manifest, the amount of dependencies needs to be restricted. By default, the
          # mikepenz/gradle-dependency-submission GitHub action processes the dependencies for all configurations which
          # can result in a manifest that is too big. The dependencies might still be shown in the GitHub UI on the
          # Dependency Graph page without any errors. However, no Dependabot alerts will be sent for the dependencies.
          #
          # To restrict the size of the manifest, the "testCompileClasspath" configuration filter is used. Since the
          # "testImplementation" configuration extends the "implementation" configuration, the "testCompileClasspath"
          # configuration will also include the dependencies in the "compileClasspath" configuration. This way, the
          # resulting manifest will include production dependencies as well as dependencies needed for testing.
          gradle-build-configuration: testCompileClasspath
        env:
          # Set the registry credentials as environment variables.
          # See: https://docs.gradle.org/current/userguide/build_environment.html#sec:project_properties
          ORG_GRADLE_PROJECT_nexusUrl: ${{ secrets.registry-url }}
          ORG_GRADLE_PROJECT_repoUser: ${{ secrets.registry-username }}
          ORG_GRADLE_PROJECT_repoPassword: ${{ secrets.registry-password }}
